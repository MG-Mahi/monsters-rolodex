{"version":3,"sources":["components/Card/Card.jsx","components/CardList/CardList.jsx","components/SearchBox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","state","searchField","fetch","then","res","json","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGe,SAASA,EAAKC,GAC3B,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,WCLT,SAASC,EAASR,GAC/B,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAACJ,EAAD,CAAuBI,QAASA,GAArBA,EAAQC,S,YCNZ,SAASO,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC/C,OACE,8BACE,uBACEZ,UAAU,SACVa,KAAK,SACLC,YAAaH,EACbI,SAAUH,M,ICAGI,E,kDACnB,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAAS,EAAKE,SAAS,CAAEf,SAAUa,S,oBAG7C,WAAU,IAAD,OACP,EAAkCG,KAAKP,MAA/BT,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YAEZO,EAAmBjB,EAASkB,QAAO,SAACxB,GAAD,OACvCA,EAAQG,KAAKsB,cAAcC,SAASV,EAAYS,kBAGlD,OACE,sBAAK3B,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,8BASA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAACiB,GAEb,EAAKN,SAAS,CAAEL,YAAaW,EAAEC,OAAOC,WAG1C,cAAC,EAAD,CAAUvB,SAAUiB,IACpB,cAAC3B,EAAD,CAAMI,QAASsB,KAAKP,MAAMT,kB,GA1CDwB,aCClBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8270a471.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.css\";\r\n\r\nexport default function Card(props) {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        alt=\"monster\"\r\n      />\r\n      <h1>{props.monster.name}</h1>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./CardList.css\";\r\n\r\nimport Card from \"../Card/Card\";\r\n\r\nexport default function CardList(props) {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./SearchBox.css\";\r\n\r\nexport default function SearchBox({ placeHolder, handleChange }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeHolder}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","// import logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\n\nimport CardList from \"./components/CardList/CardList\";\n// import SearchBox from \"./components/SearchBox/SearchBox\";\nimport Card from \"./components/Card/Card\";\n\nimport \"./App.css\";\nimport SearchBox from \"./components/SearchBox/SearchBox\";\n\n// Class component\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((res) => this.setState({ monsters: res }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"heading\">Monsters Rolodex</h1>\n        {/* <input\n          type=\"search\"\n          onChange={(e) => {\n            this.setState({ searchField: e.target.value }, () =>\n              console.log(this.state)\n            );\n          }}\n        /> */}\n        <SearchBox\n          placeHolder=\"Search monsters\"\n          handleChange={(e) => {\n            // This is called lifting state up. Instead of placing state in searchBox component, we are placing it in app.js which can access both cardList component and searchBox component\n            this.setState({ searchField: e.target.value });\n          }}\n        />\n        <CardList monsters={filteredMonsters} />\n        <Card monster={this.state.monsters} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}